shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/ddp-project/dataset")
mydata <- read.csv("./crimedata.csv")
summary(mydata)
str(mydata)
plot(mydata)
myset <- mtcars
summary(myset)
View(myset)
---
title: "Regression Lab - mtcars"
author: "Neal Gushue"
date: "May 22, 2016"
output: pdf_document
---
# Coursera Regression Models assignment
## “Is an automatic or manual transmission better for MPG”
### Instructions
You work for Motor Trend, a magazine about the automobile industry. Looking at a data set of a collection of cars, they are interested in exploring the relationship between a set of variables and miles per gallon (MPG) (outcome). They are particularly interested in the following two questions:
“Is an automatic or manual transmission better for MPG”
"Quantify the MPG difference between automatic and manual transmissions"
This analysis is intented for a analyist type audience.  An executive presentation would flow very different..
#### First up, lets load the dataset and transform a few fields into different factors to make it easier to work with..
```{r}
data(mtcars)
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$disp <- factor(mtcars$disp)
mtcars$carb <- factor(mtcars$carb)
mtcars$vs   <- factor(mtcars$vs)
mtcars$am   <- factor(mtcars$am,labels=c("Auto","Manual"))
```
##### Now lets take an initial look thru what we have.  Explore :)
```{r}
head(mtcars)
summary(mtcars)
pairs(mpg ~ ., data = mtcars)
```
We are specifically asked to look at the relationship betweek the number of cyl vs mpg, however with the pairwise plot we can see a number of relationships which can be explored later..
Lets focus in on cyl / mpg with a boxplot..
```{r}
boxplot(mpg ~ am, data = mtcars,  ylab = "MPG", xlab = "Transmission")
```
Well it seems that a manual transmission is more fuel efficient vs an automatic, with a larger variance within the manual transmission type...  That vairiance may be due to manufacture, perhaps a drivers style, etc.  It would be helpful to have a related dataset on those points for a future query..  But for now, a simplistic answer will suffice..
#### lets move along to regression analysis.
Lets begin with linear models.
```{r}
# Begin with the specific mpg vs transmission type
mpgmodel <- lm(mpg ~ am , data = mtcars)
# Now lets see how that worked out..
coef(summary(mpgmodel))
par(mfrow= c(2,2))
plot(mpgmodel)
```
Lets look at other models.  Since we dont know what other factors might incfluence mpg, we'll take them all and see what one works out..
```{r}
allmodels <- lm(mpg ~ . , data = mtcars)
topmodel <- step(allmodels, direction = "both")
summary(topmodel$coefficients)
```
Lets look at the t.test for mpg vs am to verify the initial findings..  The question is :is the MPG use the same for both manual and automatic transmissions..
```{r}
t.test(mpg ~ am, data = mtcars)
```
Based on the t-stat, we can state that the MPG use is indeed different...
## Conclusion
Is it true that a manual transmission is more fuel efficient?  I'd say yes..  How much more fuel efficient is a harder quesiton to definitavely say, as there are other elements of this dataset that have an impact.   Will this model fit all other vehicle types ?  I cannot say that with confidence ..
install.packages("rCharts")
mydataset <- mtcars
summary(mydataset)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
install_github('rstudio/shinyapps')
install.packages(rconnect)
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages(c("mgcv", "survival"))
install.packages("rsconnect")
rsconnect::setAccountInfo(name='locarz', token='BF40E044C5DD5CCD4DCAF5373A24BB71', secret='YXbIVj4wFwFhmliI32PTkqc2Z87eebOa3GmzbQgF')
shiny::runApp()
install.packages(ggplot2)
install.packages('ggplot2')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(mydataset)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(devtools)
install.packages("devtools")
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
setwd("~/ddp-project")
library(slidify)
author(Project-deck)
author("Project-deck")
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
pairs(mydataset)
pairs(mpg ~ ., data = mtcars)
pairs(mpg ~ ., data = mtcars)
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
browseURL('index.html')
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
library(knitr)
```
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
shiny::runApp()
install.packages("markdown")
install.packages("markdown")
install.packages("curl")
install.packages("curl")
install.packages('devtools')
install.packages("rmarkdown")
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
setwd("~/ddp-project/Project-deck")
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.R')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
author(testing)
author('testing')
pwd
setwd("~/ddp-project/Project-deck")
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
